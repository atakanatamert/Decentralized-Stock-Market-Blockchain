{
  "_args": [
    [
      {
        "raw": "memorystream@^0.3.1",
        "scope": null,
        "escapedName": "memorystream",
        "name": "memorystream",
        "rawSpec": "^0.3.1",
        "spec": ">=0.3.1 <0.4.0",
        "type": "range"
      },
      "C:\\Users\\Atakan Atamert\\Desktop\\BlockchainStockMarket\\node_modules\\solc"
    ]
  ],
  "_from": "memorystream@>=0.3.1 <0.4.0",
  "_id": "memorystream@0.3.1",
  "_inCache": true,
  "_location": "/memorystream",
  "_nodeVersion": "0.12.0",
  "_npmUser": {
    "name": "jsbizon",
    "email": "dmitryp3@gmail.com"
  },
  "_npmVersion": "2.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "memorystream@^0.3.1",
    "scope": null,
    "escapedName": "memorystream",
    "name": "memorystream",
    "rawSpec": "^0.3.1",
    "spec": ">=0.3.1 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/solc"
  ],
  "_resolved": "https://registry.npmjs.org/memorystream/-/memorystream-0.3.1.tgz",
  "_shasum": "86d7090b30ce455d63fbae12dda51a47ddcaf9b2",
  "_shrinkwrap": null,
  "_spec": "memorystream@^0.3.1",
  "_where": "C:\\Users\\Atakan Atamert\\Desktop\\BlockchainStockMarket\\node_modules\\solc",
  "author": {
    "name": "Dmitry Nizovtsev",
    "url": "https://github.com/JSBizon"
  },
  "bugs": {
    "url": "https://github.com/JSBizon/node-memorystream/issues"
  },
  "contributors": [
    {
      "name": "Dmitry Nizovtsev",
      "email": "dmitryp3@gmail.com"
    }
  ],
  "dependencies": {},
  "description": "This is lightweight memory stream module for node.js.",
  "devDependencies": {
    "expect.js": "~0.2.0",
    "grunt": "~0.4",
    "grunt-cli": "~0.1.13",
    "grunt-contrib-jshint": "~0.10.0",
    "grunt-mocha-test": "~0.12.2",
    "mocha": "~1.20.0",
    "q": "~1.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "86d7090b30ce455d63fbae12dda51a47ddcaf9b2",
    "tarball": "https://registry.npmjs.org/memorystream/-/memorystream-0.3.1.tgz"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "gitHead": "5a7ae4a621f786cdb31ef444839ef6a92af5300f",
  "homepage": "https://github.com/JSBizon/node-memorystream",
  "keywords": [
    "memory",
    "test",
    "stream",
    "tools",
    "streams",
    "buffer"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/JSBizon/node-memorystream/raw/master/LICENSE"
    }
  ],
  "maintainers": [
    {
      "name": "jsbizon",
      "email": "dmitryp3@gmail.com"
    }
  ],
  "name": "memorystream",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/JSBizon/node-memorystream.svg?branch=master)](https://travis-ci.org/JSBizon/node-memorystream)\n\n# Introduction\nnode-memorystream - this module allow create streams in memory. It can be used for emulating file streams, filtering/mutating data between one stream and another, buffering incoming data, being the gap between two data/network streams of variable rates, etc. MemoryStream support read/write states or only read state or only write state. The API is meant to follow node's Stream implementation.\nModule supports streams for node > 0.10 now.\n\n\nOriginal module is here git://github.com/ollym/memstream.git was remade and improved. \n\n## Installation\nIf you have npm installed, you can simply type:\n\n\tnpm install memorystream\n\t\nOr you can clone this repository using the git command:\n\n\tgit clone git://github.com/JSBizon/node-memorystream.git\n\t\n## Usage\nSome examples how to use memorystream module.\n\n#### Basic I/O Operation\nIn this example I illustrate the basic I/O operations of the memory stream.\n\n\tvar MemoryStream = require('memorystream');\n\tvar memStream = new MemoryStream(['Hello',' ']);\n\t\n\tvar data = '';\n\tmemStream.on('data', function(chunk) {\n\t\tdata += chunk.toString();\n\t});\n\t\n\tmemStream.write('World');\n\t\n\tmemStream.on('end', function() {\n\t\t// outputs 'Hello World!'\n\t\tconsole.log(data);\n\t});\n\tmemStream.end('!');\n\t\n#### Piping\nIn this example I'm piping all data from the memory stream to the process's stdout stream.\n\n\tvar MemoryStream = require('memorystream');\n\tvar memStream = new MemoryStream();\n\tmemStream.pipe(process.stdout, { end: false });\n\t\n\tmemStream.write('Hello World!');\n\t\nIn this example I'm piping all data from the response stream to the memory stream.\n\n\tvar http = require('http'),\n\t\tMemoryStream = require('memorystream');\n\n\tvar options = {\n\t\thost: 'google.com'\n\t};\n\tvar memStream = new MemoryStream(null, {\n\t\treadable : false\n\t});\n\n\tvar req = http.get(options, function(res) {\n\t\tres.pipe(memStream);\n\t\tres.on('end', function() {\n\t\t\tconsole.log(memStream.toString());\n\t\t});\n\t});\n\n#### Delayed Response\nIn the example below, we first pause the stream before writing the data to it. The stream is then resumed after 1 second, and the data is written to the console.\n\n\tvar MemoryStream = require('memorystream');\n\n\tvar memStream = new MemoryStream('Hello');\n\tvar data = '';\n\tmemStream.on('data', function(chunk) {\n\t\tdata += chunk;\n\t});\n\t\n\tmemStream.pause();\n\tmemStream.write('World!');\n\t\n\tsetTimeout(function() {\n\t\tmemStream.resume();\n\t}, 1000);\n\n## Documentation\nThe memory stream adopts all the same methods and events as node's Stream implementation.\nDocumentation is [available here](http://github.com/JSBizon/node-memorystream/wiki/API/ \"Documentation\").\n\n\n\n\t",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/JSBizon/node-memorystream.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "version": "0.3.1"
}
